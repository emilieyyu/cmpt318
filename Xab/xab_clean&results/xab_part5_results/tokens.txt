strategy-based
instruction
lessons
learned
in
teaching
the
effective
and
efficient
use
of
computer
applications
suresh
k
bhavnani
university
of
michigan
frederick
a
peck
university
of
colorado
and
frederick
reif
carnegie
mellon
university
numerous
studies
have
shown
that
many
users
do
not
acquire
the
knowledge
necessary
for
the
effective
and
efficient
use
of
computer
applications
such
as
spreadsheets
and
web-authoring
tools
while
many
cognitive
cultural
and
social
reasons
have
been
offered
to
explain
this
phenomenon
there
have
been
few
systematic
attempts
to
address
it
this
article
describes
how
we
identified
a
framework
to
organize
effective
and
efficient
strategies
to
use
computer
applications
and
used
an
approach
called
strategy-based
instruction
to
teach
those
strategies
over
five
years
to
almost
400
students
controlled
experiments
demonstrated
that
the
instructional
approach
1
enables
students
to
learn
strategies
without
harming
command
knowledge
2
benefits
students
from
technical
and
nontechnical
majors
and
3
is
robust
across
different
instructional
contexts
and
new
applications
real-world
classroom
experience
of
teaching
strategy-based
instruction
over
several
instantiations
has
enabled
the
approach
to
be
disseminated
to
other
universities
the
lessons
learned
throughout
the
process
of
design
implementation
evaluation
and
dissemination
should
allow
teaching
a
large
number
of
users
in
many
organizations
to
rapidly
acquire
the
strategic
knowledge
to
make
more
effective
and
efficient
use
of
computer
applications
1
introduction
this
article
reports
our
experience
in
the
design
implementation
evaluation
and
dissemination
of
a
teaching
approach
called
strategy-based
instruction
this
approach
evolved
over
five
years
through
teaching
almost
400
students
is
designed
to
teach
effective
and
efficient
strategies
to
use
complex
computer
applications
such
as
spreadsheets
and
web-authoring
tools
strategy-based
instruction
is
motivated
by
several
empirical
studies
which
have
reported
that
users
have
difficulty
in
acquiring
effective
and
efficient
strategies
to
use
computer
authoring
applications
these
empirical
studies
in
the
use
of
unix
doane
et
al
1990
word
processors
rosson
1983
spreadsheets
nilsen
et
al
1993
cragg
and
king
1993
and
computer-aided
drafting
cad
systems
bhavnani
and
john
2000
have
shown
that
while
most
users
can
easily
learn
how
to
use
basic
commands
few
of
them
acquire
the
knowledge
to
use
the
commands
effectively
and
efficiently
for
example
nilsen
et
al
1993
observed
experienced
spreadsheet
users
perform
a
task
requiring
a
change
of
width
of
several
adjacent
columns
with
the
exception
of
one
they
found
that
most
of
the
users
modified
the
column
widths
one-by-one
in
order
to
avoid
modifying
the
exception
however
another
method
of
performing
this
task
is
to
aggregate
all
the
columns
including
the
exception
modify
their
widths
and
then
modify
the
exception
back
to
its
original
width
this
method
avoids
the
time-consuming
and
error-prone
steps
of
changing
the
width
of
each
column
the
method
is
therefore
efficient
because
it
reduces
task
time
and
effective
because
it
reduces
errors
in
the
end
product
while
some
users
do
in
fact
acquire
efficient
and
effective
methods
to
become
experts
why
do
many
other
users
persist
in
using
inefficient
and
ineffective
methods
to
perform
common
computer
tasks
analyses
of
tasks
like
the
previous
one
have
led
researchers
to
conclude
that
users
are
likely
to
change
a
method
to
perform
a
task
if
that
method
fails
to
achieve
the
intended
goal
however
users
are
more
likely
to
not
change
their
methods
if
they
succeed
in
achieving
goals
even
if
the
methods
are
inefficient
for
example
singley
and
anderson
1989
state
productions
which
produce
clearly
inappropriate
actions
contribute
to
poor
initial
performance
on
a
transfer
task
but
are
quickly
weeded
out
productions
that
generate
actions
which
are
merely
non-optimal
however
are
more
difficult
to
detect
and
persist
for
longer
periods
p
119
more
recently
fu
and
gray
2004
suggest
that
most
users
persist
in
using
suboptimal
methods
e
g
using
spaces
to
center
a
word
on
a
page
because
they
are
general
purpose
and
therefore
useful
for
a
wide
range
of
similar
tasks
furthermore
because
such
suboptimal
methods
provide
immediate
incremental
feedback
about
progress
towards
the
user
s
goal
they
become
preferred
methods
over
time
unfortunately
for
the
user
these
preferred
methods
are
highly
inefficient
when
used
for
complex
tasks
other
reasons
for
a
review
see
bhavnani
and
john
2000
that
might
conspire
against
users
becoming
more
effective
and
efficient
in
using
computer
applications
include
prior
knowledge
dominating
current
performance
thus
leading
to
the
einstellung
effect
luchins
and
luchins
1970
flemming
et
al
1997
a
production
bias
carroll
and
rosson
1987
which
results
in
users
focusing
on
the
task
at
hand
rather
than
on
learning
to
use
the
system
more
efficiently
few
opportunities
for
acquiring
effective
methods
in
work
environments
bhavnani
et
al
1996
and
the
lack
of
effective
and
efficient
methods
made
explicit
in
instructional
material
bhavnani
and
john
1996
bhavnani
1998
furthermore
sources
of
knowledge
to
use
computer
applications
like
help
and
user
manuals
either
focus
on
command
instructions
for
simple
tasks
or
focus
on
methods
to
perform
complex
tasks
methods
that
are
task-specific
and
difficult
to
generalize
bhavnani
1998
given
the
many
reasons
that
conspire
against
users
acquiring
efficient
and
effective
methods
can
explicit
instruction
address
this
issue
over
the
last
20
years
researchers
have
stressed
the
need
for
computer
literacy
in
undergraduate
education
sellars
1988
identified
the
different
stages
of
computer
literacy
halaris
and
sloan
1985
and
designed
approaches
to
teach
application
commands
such
as
through
minimalist
documentation
carroll
et
al
1987
more
recently
researchers
have
explored
extensions
of
computer
literacy
to
new
uses
of
technology
e
g
as
a
communication
device
and
to
social
aspects
of
technology
e
g
ethical
computing
guidelines
goldweber
et
al
1994
international
society
for
technology
in
education
1999
hoffman
and
blake
2003
finally
there
have
been
numerous
approaches
for
teaching
computer
skills
through
online
tutoring
systems
e
g
shaw
and
polovina
1999
and
comparisons
of
different
instructional
approaches
such
as
tutors
and
discovery
learning
e
g
charney
et
al
1990
while
this
research
provides
important
insights
into
the
need
and
process
of
teaching
users
how
to
use
computer
applications
they
have
mostly
focused
on
teaching
how
to
use
basic
commands
however
several
studies
have
shown
that
most
users
do
not
acquire
efficient
and
effective
methods
just
by
learning
how
to
use
commands
for
example
architects
despite
formal
cad
training
to
use
commands
and
many
years
of
experience
using
the
cad
system
did
not
use
effective
and
efficient
methods
in
real-world
tasks
bhavnani
et
al
1996
to
address
this
situation
we
hypothesized
that
users
might
benefit
from
explicit
instruction
on
effective
and
efficient
methods
to
use
computer
applications
for
example
in
addition
to
learning
how
to
select
and
modify
columns
in
a
spreadsheet
we
hypothesized
that
users
might
benefit
by
also
learning
the
method
of
dealing
with
exceptions
this
method
is
general
because
it
can
be
used
to
deal
with
a
wide
range
of
tasks
involving
different
information
objects
e
g
words
graphics
formulas
we
refer
to
such
general
and
goal-directed
methods
as
strategies
to
teach
efficient
and
effective
strategies
we
first
need
to
know
what
they
are
unfortunately
there
has
been
relatively
little
research
in
identifying
effective
and
efficient
strategies1
for
using
computer
applications
for
example
as
discussed
earlier
nilsen
et
al
1993
identified
a
few
efficient
methods
to
perform
spreadsheet
tasks
and
lee
and
barnard
1993
discuss
a
method
to
compare
different
parts
of
a
document
by
using
the
split
window
command
in
neither
case
has
there
been
an
attempt
to
generalize
these
methods
nor
have
they
been
organized
in
a
framework
furthermore
while
much
research
has
focused
on
teaching
computer
commands
we
have
found
no
attempts
to
teach
and
evaluate
strategies
to
use
computer
applications
this
article
describes
our
experience
over
five
years
to
1
develop
a
framework
to
identify
and
organize
strategies
that
generalize
across
computerauthoring
applications
and
2
design
implement
evaluate
and
disseminate
an
instructional
framework
to
teach
these
strategies
section
2
reviews
our
prior
research
that
focused
on
the
design
of
the
aforementioned
two
frameworks
and
how
they
were
used
to
implement
and
evaluate
a
prototype
for
strategy-based
instruction
section
3
discusses
our
more
recent
research
which
evaluated
the
robustness
of
the
prototype
as
it
was
extended
to
teach
new
applications
to
new
populations
and
in
a
new
context
section
4
generalizes
our
experiences
by
indicating
five
lessons
learned
in
teaching
strategy-based
instruction
we
conclude
with
reflections
on
our
experience
in
designing
implementing
and
evaluating
the
strategy-based
instruction
to
almost
400
students
over
five
years
and
with
research
questions
that
need
to
be
addressed
to
make
more
users
effective
and
efficient
in
the
use
of
computer
applications
2
design
implementation
and
evaluation
of
a
strategy-based
instructional
prototype
our
research
on
strategy-based
instruction
began
with
the
design
of
the
following
two
frameworks
1
a
strategy
framework
that
specified
the
general
powers
of
computers
which
were
used
to
identify
efficient
and
effective
strategies
and
2
a
strategy-based
instructional
framework
that
specified
the
general
principles
of
instruction
which
were
used
to
identify
an
approach
for
teaching
strategies
to
novice
users
these
two
frameworks
were
used
to
implement
a
prototype
of
strategy-based
instruction
which
was
then
evaluated
in
controlled
classroom
experiments
2
1
design
of
a
strategy
framework
the
strategy
framework
was
developed
through
a
literature
review
of
effective
and
efficient
methods
for
using
computer
applications
bhavnani
and
john
2000
observation
of
users
performing
real-world
tasks
bhavnani
et
al
1996
analysis
of
the
features
of
applications
bhavnani
and
john
1998
and
a
goms
card
et
al
1983
john
and
kieras
1996
analysis
of
key
strategies
bhavnani
and
john
2000
this
process
led
us
to
identify
a
strategy
framework
consisting
of
9
strategies
based
on
4
general
functions
or
powers
of
computer
applications
iteration
propagation
organization
and
visualization
2
the
first
column
of
appendix-a
shows
the
9
general
strategies
and
the
remaining
columns
show
how
those
strategies
can
be
instantiated
across
different
authoring
applications
for
example
the
strategy
described
earlier
to
modify
many
columns
with
an
exception
an
instantiation
of
the
handle
exceptions
last
strategy
in
appendix-a
is
efficient
because
it
exploits
the
power
of
iteration
provided
by
most
authoring
tools
instead
of
the
user
modifying
each
column
the
strategy
enables
the
iterative
task
to
be
delegated
to
the
computer
given
some
constraints
such
strategies
are
critical
to
learn
because
real-world
users
as
shown
by
nilsen
et
al
1993
typically
miss
opportunities
to
use
such
strategies
furthermore
a
goms
analysis
of
such
iteration
strategies
found
that
they
could
lead
to
a
reduction
in
time
of
between
40-70
and
to
a
reduction
in
the
probability
of
errors
bhavnani
and
john
2000
similarly
propagation
strategies
exploit
the
power
of
computers
to
modify
objects
that
are
connected
through
explicit
dependencies
these
strategies
allow
users
to
propagate
changes
to
large
numbers
of
interconnected
objects
for
example
the
strategy
make
dependencies
known
to
the
computer
is
useful
in
word
processors
in
the
use
of
style
here
a
user
can
create
paragraphs
that
need
to
share
a
common
format
specification
when
the
specification
is
modified
all
the
dependent
paragraphs
are
automatically
changed
similarly
formulas
in
a
spreadsheet
can
be
linked
to
dependent
data
or
graphic
elements
in
a
cad
system
can
be
linked
to
a
common
graphic
definition
of
objects
organization
strategies
exploit
the
power
of
computers
to
construct
and
maintain
the
organization
of
information
such
as
tables
and
lists
for
example
the
strategy
make
organizations
known
to
the
computer
is
useful
in
a
word
processor
in
the
use
of
a
table
in
contrast
to
using
tabs
to
construct
a
table
whose
organization
may
not
be
maintained
when
the
contents
are
modified
using
the
insert
table
command
in
msword
enables
the
computer
to
maintain
the
tabular
organization
under
any
modification
of
its
contents
similarly
data
for
different
years
in
a
spreadsheet
can
be
organized
in
separate
sheets
for
easy
access
and
manipulation
finally
visualization
strategies
exploit
the
power
of
computers
to
display
information
selectively
without
altering
its
content
for
example
the
strategy
view
parts
of
spread-out
information
to
fit
simultaneously
on
the
screen
addresses
the
limited
screen
space
of
most
computer
screens
for
instance
a
user
might
need
to
compare
the
contents
of
a
table
at
the
beginning
of
a
long
word
processing
document
to
the
contents
of
a
table
in
the
middle
of
the
same
document
in
such
cases
instead
of
scrolling
back
and
forth
between
the
tables
it
is
more
efficient
and
less
error-prone
to
set
up
distinct
views
e
g
through
the
use
of
the
split-window
command
that
focus
on
each
table
and
that
can
be
viewed
simultaneously
on
the
screen
this
strategy
is
clearly
useful
in
large
documents
containing
text
numbers
or
graphic
elements
and
is
therefore
generally
useful
across
applications
using
such
objects
as
in
most
performance-improvement
methods
these
strategies
trade
off
the
effort
to
use
a
strategy
and
the
realized
benefits
for
example
iteration
strategies
are
more
beneficial
when
they
are
used
for
many
elements
rather
than
a
few
bhavnani
and
john
1998
furthermore
it
would
not
be
compelling
to
use
a
strategy
that
saves
time
when
time
is
not
a
critical
factor
to
a
user
therefore
strategies
are
more
cost
effective
for
complex
tasks
and
where
the
performance
gains
are
of
value
to
the
user
it
is
therefore
as
important
to
know
when
to
use
a
strategy
as
it
is
to
know
how
to
execute
it
2
2
design
of
a
strategy-based
instructional
framework
as
suggested
by
many
researchers
e
g
klahr
and
carver
1988
gong
and
elkerton
1990
we
decided
to
model
the
knowledge
required
to
use
the
strategies
before
we
designed
the
instruction
this
approach
enabled
us
to
gain
a
precise
understanding
of
the
knowledge
to
be
imparted
a
goms
analysis
of
the
strategies
bhavnani
and
john
2000
revealed
that
each
requires
three
knowledge
components
1
command
knowledge
that
includes
knowledge
of
the
existence
of
commands
their
location
and
the
methods
to
use
them
in
goms
terms
there
must
exist
a
method
with
operators
to
execute
the
command
2
application-specific
strategic
knowledge
that
includes
knowledge
of
the
existence
of
efficient
strategies
within
an
application
conditions
of
when
to
use
a
strategy
and
the
method
to
execute
the
strategy
by
sequencing
different
commands
in
goms
terms
there
must
be
a
selection
rule
that
recognizes
when
to
use
this
strategy
and
an
associated
method
to
sequence
different
commands
to
execute
the
strategy
3
application-general
strategic
knowledge
that
provides
knowledge
of
how
particular
applicationspecific
strategies
can
be
applied
across
applications
in
goms
terms
the
selection
rules
for
strategies
are
generally
stated
and
can
be
instantiated
in
different
task
situations
while
the
goms
modeling
guided
us
towards
a
more
precise
understanding
of
what
to
teach
it
did
not
provide
guidance
on
how
to
teach
the
above
three
knowledge
components
therefore
we
exploited
existing
educational
research
to
understand
how
to
teach
the
knowledge
components
we
now
describe
how
we
designed
an
instructional
framework
by
combining
our
understanding
of
the
knowledge
components
required
to
use
effective
and
efficient
strategies
with
the
existing
research
on
how
best
to
teach
different
types
of
skills
2
2
1
command
knowledge
our
approach
of
when
and
how
to
teach
command
knowledge
was
guided
by
previous
research
in
the
psychology
and
education
literature
anderson
2000
p
387
recommended
that
it
was
important
to
teach
component
skills
before
teaching
high-level
skills
that
included
those
component
skills
this
suggested
to
us
that
command
knowledge
should
be
taught
before
strategies
that
used
those
commands
this
was
further
verified
in
our
early
pilots
bhavnani
et
al
1999
where
we
attempted
to
first
teach
general
strategies
as
a
unifying
framework
for
later
teaching
the
commands
however
this
approach
resulted
in
a
course
that
was
not
motivating
for
the
students
because
the
strategies
were
too
abstract
without
the
command
knowledge
our
final
prototype
therefore
taught
commands
before
teaching
the
strategies
prior
research
has
also
shown
the
importance
of
active
processing
whereby
students
are
made
to
engage
in
a
task
instead
of
merely
observing
passively
how
others
perform
the
task
such
active
processing
has
been
shown
to
result
in
a
deeper
understanding
of
the
imparted
knowledge
nicholls
1989
nolen
1996
2003
we
therefore
designed
the
instruction
in
two
parts
1
demonstration
of
commands
where
the
students
watched
the
instructor
execute
the
steps
of
a
command
while
this
first
step
was
passive
it
enabled
the
student
to
begin
to
acquire
the
declarative
knowledge
of
the
location
goal
and
process
of
using
the
command
2
practice
of
commands
where
the
students
performed
on
their
own
a
task
that
was
different
from
the
one
demonstrated
but
required
the
same
commands
such
an
approach
was
used
to
encourage
active
processing
for
example
the
students
were
shown
how
to
use
commands
to
view
a
document
such
as
split
window
scroll
and
new
window
and
then
given
an
opportunity
to
practice
the
commands
in
the
context
of
a
new
task
prior
research
also
suggested
that
students
typically
have
higher
intrinsic
motivation
when
they
are
taught
with
examples
that
are
relevant
to
them
and
to
the
real-world
pintrich
and
schunk
1996
myers
1989
mccade
2001
eisenberg
and
johnson
2002
the
in-class
tasks
for
demonstration
and
practice
as
shown
in
appendix-d
were
therefore
carefully
designed
to
be
meaningful
and
relevant
to
the
students
for
example
the
tasks
for
the
technical
students
included
organizing
information
related
to
salaries
for
teaching
assistants
and
tasks
for
the
art
students
included
organizing
information
related
to
art
and
music
these
tasks
were
designed
based
on
input
from
the
student
instructors
who
had
experience
in
teaching
the
cmu
freshman
students
in
previous
years
and
therefore
had
first-hand
knowledge
of
the
tasks
that
were
relevant
to
these
students
2
2
2
application-specific
strategic
knowledge
our
approach
to
teaching
application-specific
strategic
knowledge
was
guided
by
research
which
has
shown
that
higher
retention
of
knowledge
can
often
be
achieved
when
students
construct
knowledge
through
the
process
of
guided
discovery
e
g
brown
and
palinscar
1989
in
addition
to
using
the
notion
of
guided
discovery
our
approach
was
also
informed
by
the
importance
of
making
explicit
the
conditions
under
which
a
strategy
is
useful
singley
and
anderson
1989
we
implemented
the
notion
of
guided
discovery
by
engaging
the
students
in
an
interactive
session
where
they
were
asked
to
describe
how
they
would
use
the
commands
just
practiced
to
efficiently
perform
a
complex
task
for
example
after
being
introduced
to
the
split
window
command
the
students
were
shown
a
long
document
with
many
short
bulleted
lists
and
asked
to
discuss
a
method
for
bringing
three
nonadjacent
items
from
the
last
list
to
the
third
list
the
instructors
provided
feedback
for
the
methods
suggested
by
the
students
by
discussing
the
trade-offs
and
then
demonstrated
the
efficient
strategy
of
splitting
the
window
before
moving
the
items
these
discussions
made
explicit
the
conditions
which
best
motivated
the
use
of
the
applicationspecific
strategy
2
2
3
application-general
strategic
knowledge
our
approach
to
teaching
application-general
strategic
knowledge
was
guided
by
two
important
findings
in
the
acquisition
of
knowledge
1
the
transfer
of
strategies
can
be
achieved
by
teaching
the
general
form
of
a
strategy
bossock
and
holyoak
1989
fong
et
al
1986
and
through
multiple
examples
of
the
same
strategy
gick
and
holyoak
1983
and
2
higher
retention
can
be
achieved
by
revisiting
the
same
knowledge
at
regular
and
reasonably
extended
intervals
in
a
phenomenon
called
the
spacing
effect
e
g
hintzman
1969
underwood
1969
anderson
and
milson
1989
anderson
2000
we
implemented
the
notion
of
teaching
application-general
strategic
knowledge
in
multiple
contexts
by
first
presenting
the
general
form
of
the
strategy
and
then
showing
how
it
could
be
used
across
many
computer
applications
for
example
after
the
split-window
strategy
was
discussed
and
demonstrated
within
an
application
as
discussed
above
the
strategy
was
generalized
to
view
parts
of
spread-out
information
to
fit
simultaneously
on
the
screen
by
pointing
it
out
in
a
strategy
handout
similar
to
the
table
shown
in
appendixa
this
handout
contained
all
the
strategies
and
examples
of
their
instantiation
across
the
applications
taught
similarly
the
application-specific
strategy
of
using
the
styles
command
in
word
to
efficiently
and
effectively
modify
text
was
generalized
to
the
strategy
make
dependencies
known
to
the
computer
by
pointing
it
out
in
the
handout
to
leverage
the
spacing
effect
to
enhance
retention
we
taught
the
same
strategy
in
subsequent
applications
2
3
implementation
of
the
strategy-based
instructional
framework
the
strategy-based
instructional
framework
was
implemented
as
a
prototype
in
the
context
of
an
existing
seven-week
required
course
for
freshman
students
at
carnegie
mellon
university
cmu
this
course
focused
on
teaching
a
set
of
commands
to
the
freshman
students
to
provide
an
experimental
comparison
our
implementation
taught
the
same
commands
and
the
same
sequence
of
applications
unix
msword
then
excel
and
took
the
same
instruction
time
as
the
regular
cmu
instruction
3
classes
of
50
minutes
each
for
unix
msword
and
msexcel
the
strategy-based
implementation
followed
the
template
shown
in
figure
1
the
command
instruction
began
with
a
demonstration
of
a
small
set
of
commands
in
the
context
of
simple
tasks
step
1
for
example
the
instructor
introduced
different
ways
to
view
a
document
in
msword
through
the
use
of
split
window
and
scroll
the
students
were
then
told
to
practice
the
commands
just
taught
with
a
new
task
step
2
this
demonstration
and
practice
was
followed
by
instruction
for
the
next
set
of
commands
step
3
in
this
case
these
commands
involved
using
new
window
and
zoom
all
the
commands
taught
until
then
in
the
class
were
summarized
step
4
the
command
instruction
was
followed
by
application-specific
strategy
instruction
for
example
the
instructor
opened
a
3-page
document
that
had
11
different
bulleted
lists
the
students
were
asked
how
they
would
move
3
nonadjacent
bulleted
items
from
the
last
list
to
the
third
list
in
the
document
here
the
instructor
encouraged
the
students
to
discuss
alternate
methods
to
do
the
task
by
using
the
commands
they
had
just
learned
step
5
then
the
instructor
stated
that
the
advantage
of
using
the
split
window
or
new
window
to
perform
the
task
was
to
avoid
having
to
repeatedly
scroll
up
and
down
between
the
lists
step
6
the
instructor
demonstrated
this
method
in
a
practice
document
and
contrasted
it
with
the
inefficient
method
of
scrolling
step
7
the
students
were
then
given
the
strategy
handout
containing
the
strategies
and
their
instantiations
across
the
applications
as
previously
described
the
application-specific
strategy
just
taught
was
abstracted
to
the
general
strategy
view
parts
of
spread-out
information
to
fit
simultaneously
on
the
screen
the
students
were
asked
to
locate
the
strategy
just
taught
in
their
handout
and
were
shown
how
they
generalized
across
applications
step
8
steps
5-8
were
repeated
for
other
complex
tasks
demonstrating
the
utility
of
other
strategies
step
9
all
the
strategies
presented
in
the
class
were
then
summarized
by
explicitly
pointing
them
out
in
the
handout
step
10
the
steps
were
repeated
for
each
application
unix
msword
and
excel
the
presented
approach
contrasts
with
the
traditional
approach
of
teaching
such
applications
for
example
instructors
of
the
existing
cmu
course
are
taught
to
teach
commands
in
the
context
of
simple
tasks
steps
1-3
however
the
students
never
receive
instruction
on
how
to
assemble
the
commands
to
perform
complex
tasks
effectively
and
efficiently
thus
they
do
not
receive
any
instruction
on
the
general
nature
of
effective
and
efficient
methods
and
do
not
acquire
strategic
knowledge
that
they
can
use
across
applications
both
versions
of
the
course
were
taught
by
undergraduate
students
who
were
trained
to
teach
the
respective
courses
all
the
time
in
the
traditional
course
was
spent
on
teaching
pertinent
commands
and
on
examples
illustrating
their
use
in
the
strategy-based
course
the
time
was
spent
teaching
both
commands
and
general
strategies
but
because
the
teaching
of
these
was
tightly
integrated
the
total
time
spent
by
students
was
the
same
in
both
courses
2
4
evaluation
of
the
strategy-based
instruction
prototype
we
conducted
two
experiments
to
test
the
strategy-based
instruction
with
two
different
populations
the
first
experiment
cmu-1
was
conducted
with
science
and
engineering
students
and
was
designed
to
address
the
question
does
the
proposed
strategy-based
instructional
approach
help
the
acquisition
of
strategic
knowledge
without
harming
the
acquisition
of
command
knowledge
the
second
experiment
cmu-2
was
conducted
with
a
population
of
art
students
and
addressed
the
question
how
effective
is
strategy-based
instruction
for
teaching
students
with
non-technical
majors
2
4
1
method
for
cmu-1
the
students
were
divided
into
two
groups
the
command
group
received
the
instruction
ordinarily
provided
by
cmu
and
the
strategy
group
received
the
experimental
strategy-based
instruction
students
were
randomly
assigned
across
both
treatments
and
then
balanced
by
major
i
e
each
treatment
had
equal
numbers
of
students
from
each
technical
discipline
this
assignment
resulted
in
87
students
in
the
command
group
and
84
students
in
the
strategy
group
instructor
training
each
group
had
a
main
instructor
and
a
secondary
instructor
both
of
whom
were
undergraduate
students
at
the
university
the
main
instructor
taught
the
course
content
in
front
of
the
classroom
through
a
desktop
computer
connected
to
an
overhead
projector
the
role
of
the
secondary
instructor
was
to
provide
assistance
to
students
who
had
difficulty
following
the
instruction
or
had
trouble
with
the
computers
the
instructors
in
both
conditions
had
taught
the
existing
cmu
course
before
had
equivalent
experience
in
teaching
and
in
the
use
of
commands
and
were
considered
to
be
effective
instructors
all
the
instructors
therefore
had
received
the
same
instruction
on
how
to
teach
commands
but
the
strategy-group
instructors
got
extra
instruction
to
teach
the
general
strategies
instructors
in
both
groups
were
given
teaching
guides
to
help
teach
content
the
teaching
guides
for
the
command
group
consisted
of
a
list
of
commands
and
practice
files
developed
by
a
commercial
company
this
instructional
approach
is
typically
used
to
teach
computer
applications
in
educational
and
commercial
organizations
and
therefore
represented
a
realistic
comparison
condition
the
teaching
guides
for
the
strategy
group
included
the
same
commands
as
those
taught
in
the
command
group
but
in
addition
contained
instruction
on
how
to
teach
the
general
strategies
with
appropriate
demonstration
and
practice
examples
furthermore
the
strategy
instruction
included
problemsolving
requiring
interaction
with
the
students
our
guides
provided
the
overall
structure
for
instruction
but
excluded
the
actual
words
to
be
used
during
instruction
thus
the
guide
allowed
situated
elaboration
and
improvisation
by
the
instructors
while
such
teaching
guides
provide
structure
to
scaffold
new
instructors
and
enable
teaching
consistency
across
instructors
they
also
allow
for
creative
instructor
elaboration
which
could
lead
to
improved
learning
by
students
bereiter
2002
borko
and
livingston
1989
palinscar
1998
yinger
1987
this
balance
of
structure
and
improvisation
is
similar
to
how
experienced
teachers
typically
design
their
instruction
brown
and
edelson
2001
the
instruction
in
the
strategy
group
could
be
done
in
the
same
amount
of
time
as
in
the
command
group
because
the
strategies
were
tightly
integrated
into
the
teaching
of
the
commands
and
concretely
illustrated
in
the
strategy
handout
in
addition
we
created
handouts
to
explicitly
show
students
how
the
strategies
in
appendix
a
generalized
across
applications
3
posttest
tasks
the
posttest
was
given
in
a
computer
laboratory
and
consisted
of
three
sets
of
tasks
one
each
in
unix
msword
and
msexcel
as
shown
in
appendix
b
the
students
were
presented
with
tasks
and
instructions
on
paper
these
tasks
required
them
to
use
online
applications
and
files
which
consisted
of
a
unix
directory
populated
with
files
msword
to
create
a
new
file
and
an
msexcel
file
containing
a
spreadsheet
the
instructions
also
required
the
students
to
complete
after
each
task
a
brief
questionnaire
in
which
they
were
asked
to
explain
their
method
for
completing
the
task
and
their
rationale
for
using
that
method
finally
the
students
were
instructed
to
save
the
resulting
directories
and
files
which
were
checked
before
the
students
left
the
computer
laboratory
the
tasks
were
designed
to
take
a
maximum
of
1
5
hours
but
there
was
no
time
limit
given
to
the
students
the
students
were
spaced
out
in
the
computer
laboratory
to
ensure
that
they
could
not
see
the
details
of
the
computer
screen
of
other
students
in
the
experiment
embedded
in
the
previous
three
sets
of
tasks
were
13
opportunities4
shown
in
the
first
column
of
table
i
to
use
the
9
general
strategies
shown
in
appendix
a
for
example
task
3a
in
msexcel
required
the
students
to
find
which
of
two
pairs
of
days
had
the
lowest
temperature
in
a
large
spreadsheet
containing
temperature
data
one
way
to
perform
this
task
was
to
scroll
up
and
down
the
spreadsheet
in
order
to
compare
the
dates
another
way
to
perform
the
task
was
to
split
the
screen
into
two
panes
so
that
the
top
pane
would
display
at
all
times
the
column
headings
containing
the
dates
and
the
bottom
would
be
used
to
scroll
through
the
temperature
data
this
approach
provided
a
quicker
and
more
accurate
comparison
of
dates
each
of
these
strategy
opportunities
was
different
in
content
from
the
tasks
taught
in
the
experimental
course
participation
in
the
posttest
was
voluntary
students
were
requested
to
participate
in
the
posttest
for
25
and
were
informed
that
their
performance
on
the
posttest
would
not
affect
their
grade
this
recruitment
yielded
42
of
the
total
87
students
from
the
command
group
and
48
of
the
total
84
students
from
the
strategy
group
3
see
bhavnani
et
al
2001
for
a
detailed
description
of
the
course
implementation
and
http
//www
si
umich
edu/strategycourse/
for
the
teaching
guides
and
handouts
also
available
in
the
acm
digital
library
4
one
msword
task
did
not
motivate
the
use
of
the
strategy
that
it
was
designed
to
test
and
therefore
was
excluded
from
the
analysis
this
left
12
opportunities
to
use
8
strategies
2
4
2
method
for
cmu-2
the
method
for
cmu-2
was
similar
to
cmu-1
except
that
the
population
consisted
of
only
art
students
the
command
group
and
the
strategy
group
consisted
of
24
and
25
art
students
respectively
similar
to
the
cmu-1
experiment
students
were
requested
to
participate
in
the
posttest
for
25
the
recruitment
yielded
17
students
from
the
command
group
and
19
students
from
the
strategy
group
2
4
3
data
collection
we
collected
and
analyzed
five
types
of
data
1
screen-capture
videos
which
recorded
the
computer
interaction
of
each
student
2
command
logs
which
consisted
of
unix
history
files
and
msexcel
macro
files
these
files
contained
a
list
of
commands
executed
by
the
students
in
a
format
that
could
be
automatically
analyzed
by
computer
scripts
3
completed
task
files
which
were
collected
in
word
and
excel
4
qualitative
descriptions
authored
by
each
of
the
students
in
which
they
explained
how
they
completed
each
task
and
the
rationale
for
their
method
were
collected
5
exam
scores
which
were
based
on
an
exam
required
by
all
students
enrolled
in
the
course
and
tested
only
command
knowledge
were
used
to
check
whether
the
strategy
instruction
harmed
command
knowledge
2
4
4
analysis
the
focus
of
our
study
was
to
analyze
whether
or
not
students
recognized
the
opportunity
to
use
a
strategy
therefore
for
each
student
we
analyzed
each
of
the
12
strategy
opportunities
for
evidence
of
strategy
use
for
each
opportunity
students
were
given
a
binary
score
indicating
whether
or
not
they
used
the
strategy
in
that
particular
opportunity
this
led
to
nominallevel
data
for
each
strategy
i
e
a
student
either
used
a
strategy
or
did
not
table
i
shows
the
strategy
opportunities
for
each
task
the
criteria
for
strategy
use
and
the
method
used
to
analyze
the
strategy
where
possible
we
used
computational
methods
to
analyze
the
data
in
order
to
reduce
errors
in
all
cases
whenever
there
was
any
chance
for
ambiguity
the
data
were
double-checked
in
another
form
such
as
the
screen
capture
video
or
the
written
descriptions
for
example
as
shown
in
row
e
of
table
i
task
2a
in
msword
included
an
opportunity
to
use
the
strategy
make
dependencies
known
to
the
computer
students
were
given
credit
for
having
used
this
strategy
if
they
explicitly
defined
and
used
at
least
one
style
using
the
msword
style
command
strategy
use
was
assessed
by
first
looking
at
each
student
s
completed
task
file
for
evidence
of
style
use
and
then
confirmed
through
analysis
of
the
screen
capture
videos
this
confirmation
was
necessary
because
msword
sometimes
automatically
assigns
styles
to
text
2
4
5
results
cmu-1
we
performed
a
two-step
analysis
of
the
data
first
we
tested
for
an
overall
effect
by
analyzing
the
proportion
of
strategy
opportunities
used
by
each
student
in
the
command
and
strategy
groups
for
the
command
group
the
mean
proportion
of
strategies
used
was
42
66
sd
16
while
for
the
strategy
group
the
mean
proportion
of
strategies
used
was
68
58
sd
21
therefore
a
typical
student
in
the
command
group
used
42
66
of
the
strategy
opportunities
shown
in
table
ii
while
a
typical
student
in
the
strategy
group
used
68
58
this
difference
was
statistically
significant
based
on
a
t-test
of
the
proportions
t
88
6
73
p
001
in
the
second
step
of
our
analysis
we
tested
each
strategy
individually
to
provide
a
more
fine-grained
view
of
the
data
as
reported
elsewhere
bhavnani
et
al
2001
and
as
shown
in
table
ii
the
strategy
group
did
significantly
better
than
the
command
group
in
exploiting
seven
strategy
opportunities
p
0
05
for
each
of
the
seven
strategies
based
on
chi-square
tests
on
the
frequencies
in
each
group5
furthermore
there
was
no
statistically
significant
difference
in
command
knowledge
between
the
two
groups
as
measured
by
mean
scores
on
the
in-class
exams
which
tested
only
command
knowledge
as
discussed
previously
mean
for
command
group
96
07
mean
for
strategy
group
95
54
t
511
0
63
p
53
the
results
demonstrate
that
students
could
in
fact
be
taught
to
recognize
opportunities
to
use
efficient
strategies
and
to
execute
them
closer
inspection
showed
that
five
strategies
opportunities
d
i
j
k
l
in
table
ii
may
be
easily
acquired
just
by
learning
commands
for
example
even
though
the
command
group
was
given
only
command
instruction
all
of
them
recognized
the
opportunity
to
use
formulas
in
the
spreadsheet
task
i
one
explanation
is
that
once
commands
such
as
formulas
in
msexcel
are
learned
the
alternate
methods
e
g
doing
manual
calculations
in
the
spreadsheet
are
just
too
inefficient
to
be
considered
this
could
also
explain
why
two
sets
of
strategy
opportunities
f/k
and
c/j
each
testing
the
same
general
strategy
but
with
different
commands
had
very
different
usage
profiles
especially
for
the
command
group
these
results
also
confirm
laboratory
studies
which
show
that
under
certain
conditions
a
strategy
to
reuse
information
through
cut-and-paste
can
be
discovered
just
by
knowing
commands
charman
and
howes
2003
future
research
needs
to
explore
more
closely
what
makes
certain
strategy
opportunities
more
difficult
to
detect
compared
to
others
although
the
strategy
group
did
significantly
better
for
strategy
opportunities
b
and
h
the
actual
numbers
of
students
exploiting
those
opportunities
was
small
this
suggests
that
these
strategies
required
more
instruction
than
we
provided
however
because
zoom
often
leads
users
to
become
disoriented
the
lack
of
zoom
use
could
also
be
a
conscious
choice
to
avoid
such
problems
overall
the
results
showed
that
most
of
the
strategies
can
be
taught
in
the
same
amount
of
time
as
the
regular
approach
without
harming
the
acquisition
of
command-knowledge
cmu-2
as
shown
in
table
ii
the
results
of
cmu-2
were
similar
to
those
in
cmu-1
the
overall
effect
remained
command
group
mean
proportion
37
25
sd
19
strategy
group
mean
proportion
58
33
sd
20
t
34
3
21
p
01
furthermore
six
of
the
strategy
opportunities
showed
a
significant
difference
between
the
two
groups
these
results
show
the
utility
of
the
strategybased
instruction
for
students
with
very
little
technical
background
finally
command
knowledge
was
significantly
higher
in
the
strategy
group
than
the
command
group
command
group
mean
86
71
strategy
group
mean
95
47
t
151
3
97
p
001
this
suggests
that
teaching
commands
with
strategies
might
have
the
added
benefit
of
improving
command
knowledge
2
5
summary
of
the
strategy-based
instructional
prototype
in
phase-1
of
our
research
we
1
identified
a
strategy
framework
that
helped
to
organize
nine
effective
and
efficient
strategies
that
were
general
across
applications
2
identified
a
framework
to
teach
the
knowledge
components
3
implemented
the
instructional
framework
and
4
tested
the
instructional
design
in
two
controlled
experiments
furthermore
we
learned
that
a
few
strategies
did
not
require
explicit
instruction
while
others
required
more
instruction
than
we
expected
the
results
of
these
experiments
showed
that
the
strategy-based
instruction
1
enabled
students
to
learn
effective
and
efficient
strategies
2
benefited
student
populations
with
both
technical
and
nontechnical
majors
3
did
not
require
extra
time
compared
to
the
traditional
approach
focused
on
command
knowledge
and
4
did
not
harm
the
acquisition
of
command
knowledge
in
our
next
phase
we
tested
whether
the
instructional
framework
could
be
extended
to
new
applications
and
in
a
different
context
compared
to
the
prototype
3
extension
to
a
new
application
and
a
new
population
because
the
first
author
moved
to
the
university
of
michigan
we
had
the
opportunity
to
test
whether
the
strategy
framework
and
the
instructional
framework
were
robust
in
the
new
university
context
with
a
different
population
of
freshman
art
students
such
a
test
of
robustness
is
critical
because
educational
interventions
can
easily
fail
to
produce
positive
results
when
used
in
a
context
where
the
original
authors
have
less
control
brown
1992
however
testing
the
robustness
of
an
instructional
approach
in
a
new
realworld
context
usually
comes
at
the
cost
of
trading
off
experimental
control
a
common
problem
in
testing
educational
interventions
in
real
world
contexts
national
research
council
2000
brown
1992
as
described
in
the
following
section
we
had
to
make
many
modifications
to
the
instructional
design
to
fit
the
new
context
this
loss
of
control
prevented
us
from
making
statistical
comparisons
with
the
experiments
at
cmu
furthermore
unlike
many
user
tests
of
systems
that
take
around
an
hour
per
user
educational
field
experiments
may
take
an
entire
semester
this
long
time
span
reduces
the
kind
of
manipulations
that
can
be
done
practically
however
the
experience
of
testing
our
approach
in
a
new
context
led
to
insights
of
using
strategy-based
instruction
in
new
contexts
and
how
the
approach
could
be
disseminated
to
different
institutions
3
1
extension
of
the
strategy-based
instructional
design
the
new
context
had
three
major
differences
that
tested
the
robustness
of
our
strategy
and
instructional
frameworks
1
unix
was
not
taught
as
it
was
not
considered
an
application
that
was
particularly
useful
for
the
michigan
art
students
2
the
art
department
faculty
requested
that
the
course
be
extended
to
teach
dreamweaver
a
web-authoring
application
3
at
the
request
of
the
faculty
an
extra
day
was
added
for
teaching
each
application
to
enable
the
students
to
perform
a
summative
task
e
g
creating
a
resume
in
word
to
test
the
changes
we
asked
the
question
could
the
strategy-based
instructional
approach
be
applied
to
teach
new
applications
3
1
1
extension
to
a
new
application
to
develop
teaching
guides
for
dreamweaver
we
followed
a
three-step
process
1
identify
in
each
application
the
commands
that
were
appropriate
to
teach
freshman
art
students
this
was
done
in
consultation
with
the
arts
faculty
2
instantiate
the
9
general
strategies
in
dreamweaver
3
construct
for
each
application
a
4-day
teaching
guide
that
closely
followed
our
original
instructional
design
framework
but
added
an
extra
day
for
each
application
we
decided
to
teach
in
dreamweaver
17
commands
which
the
arts
faculty
agreed
were
useful
for
students
to
build
a
basic
web
site
where
the
students
could
upload
their
graphics
and
music
files
the
commands
ranged
from
open
new
file
to
define
website
and
publish
website
appendix
a
shows
how
each
of
the
9
strategies
were
instantiated
in
dreamweaver
using
the
chosen
commands
for
example
the
strategy
make
organizations
known
to
the
computer
was
instantiated
in
dreamweaver
through
commands
to
create
and
modify
tables
which
are
used
by
most
web
site
designers
to
organize
content
in
a
web
page
appendix
d
shows
the
portions
of
the
dreamweaver
teaching
guide
concerned
with
the
commands
to
use
tables
while
the
strategies
themselves
generalized
with
minimal
effort
our
main
difficulty
was
in
designing
the
demonstration
practice
and
problems-solving
tasks
for
dreamweaver
this
was
because
while
it
is
easy
to
construct
web
sites
that
have
minimal
functionality
a
credible
looking
web
site
that
was
motivating
and
relevant
to
the
art
students
required
a
considerable
effort
in
graphic
design
as
we
did
not
have
these
graphic
design
skills
we
employed
a
graphic
designer
to
construct
a
web
site
with
many
well-designed
pages
each
of
which
demonstrated
the
use
of
the
commands
and
strategies
that
we
had
chosen
to
teach
therefore
we
were
able
to
instantiate
the
nine
strategies
in
a
new
application
and
to
create
a
teaching
guide
for
the
new
application
this
demonstrated
that
we
were
successful
in
extending
both
the
strategy
framework
and
the
instructional
design
framework
to
a
new
application
furthermore
we
learned
that
applications
varied
in
the
amount
of
setup
costs
to
build
demonstration
and
practice
examples
that
were
relevant
and
motivating
3
2
effect
of
strategy-based
instruction
on
a
new
population
to
test
the
robustness
of
the
instructional
design
in
a
new
context
we
conducted
an
experiment
henceforth
referred
to
as
um-1
with
the
art
students
at
michigan
our
goal
led
to
the
following
research
question
how
robust
was
the
strategy-based
instructional
approach
when
implemented
in
a
new
context
with
a
new
population
and
with
less
control
because
retention
of
knowledge
is
critical
in
learning
we
also
wished
to
investigate
how
well
the
strategies
were
retained
over
time
this
was
not
investigated
in
the
cmu
experiments
as
the
posttests
were
given
immediately
after
the
instruction
set
was
complete
the
above
goal
led
to
the
following
research
question
does
the
strategy-based
instructional
approach
help
the
retention
of
strategic
knowledge
over
time
in
addition
to
the
primary
research
goals
to
test
robustness
and
retention
we
also
used
this
opportunity
to
perform
a
small
exploratory
study
to
probe
the
role
of
the
general
form
of
a
strategy
in
its
transfer
across
applications
3
2
1
method
for
experiment
with
art
students
um-1
as
discussed
in
section
2
2
our
goms
modeling
helped
to
pinpoint
three
types
of
knowledge
that
were
important
for
the
strategic
use
of
computer
applications
1
command
knowledge
e
g
the
existence
of
the
split
window
command
its
location
and
the
method
of
how
to
use
it
2
application-specific
strategic
knowledge
e
g
the
existence
of
a
strategy
to
modify
distant
parts
of
a
msword
document
by
using
the
split-window
command
3
application-general
strategic
knowledge
e
g
the
general
form
of
the
application-specific
strategy
so
that
it
can
be
used
across
applications
the
cmu-1
and
cmu-2
experiments
compared
students
who
were
taught
only
command
knowledge
command
group
to
students
who
were
taught
all
the
three
knowledge
components
strategy
group
in
the
current
experiment
fifty
art
students
at
the
university
of
michigan
were
randomly
divided
into
two
equal
groups
and
then
balanced
by
prior
experience
in
word
and
excel
one
group
was
given
the
same
instruction
as
the
strategy
group
in
the
cmu
experiments
with
the
modifications
discussed
in
section
3
1
and
is
therefore
still
called
the
strategy
group
analysis
of
how
the
strategy
group
performed
the
posttest
tasks
will
reveal
robustness
of
the
instructional
framework
when
taught
in
a
new
context
in
addition
to
this
analysis
we
explored
the
explicit
role
of
the
general
form
of
the
strategy
by
teaching
the
second
half
of
the
class
only
command
knowledge
and
application-specific
strategic
knowledge
for
example
while
we
taught
how
to
use
the
split
window
command
and
when
to
use
it
strategically
within
msword
we
did
not
teach
the
general
form
of
the
strategy
view
parts
of
spread
out
information
simultaneously
on
the
screen
because
this
group
was
taught
command
knowledge
and
only
the
application-specific
strategic
knowledge
it
was
called
the
command
ap-specific
group
furthermore
to
test
if
the
general
form
of
the
strategy
was
necessary
for
transfer
across
applications
we
also
did
not
teach
the
strategy
view
parts
of
spread
out
information
simultaneously
on
the
screen
in
excel
in
the
strategy
group
therefore
while
the
command
ap-specific
group
had
no
general
strategy
instruction
at
all
the
strategy
group
had
instruction
for
all
general
strategies
in
all
applications
except
for
the
above
strategy
in
excel
this
manipulation
allowed
us
to
explore
if
1
the
general
form
of
the
strategy
was
necessary
for
its
use
within
an
application
and
2
if
the
general
form
was
necessary
for
transferring
that
knowledge
across
applications
the
latter
was
tested
in
a
single
condition
for
exploratory
purposes
table
iii
shows
the
different
knowledge
components
taught
in
each
group
the
posttest
data
were
collected
as
part
of
the
final
exam
required
by
all
students
this
yielded
25
students
in
each
condition
the
posttest
for
each
group
was
identical
to
the
msword
and
msexcel
posttest
tasks
used
in
cmu-1
because
tasks
for
dreamweaver
require
long
set-up
times
exceeding
the
time
constraints
of
the
exam
we
were
unable
to
test
strategies
in
that
application
the
retention
test
see
appendix
c
was
conducted
one
month
later
to
explore
how
well
the
students
in
both
conditions
retained
the
strategies
the
students
were
requested
to
take
part
in
the
retention
study
for
406
this
yielded
18
and
20
students
from
the
command
ap-specific
group
and
the
strategy
group
respectively
where
all
these
students
constituted
76
of
the
original
class
there
was
no
statistically
significant
difference
between
the
posttest
scores
of
the
students
taking
the
retention
test
and
the
posttest
scores
for
the
students
who
did
not
take
it
this
result
suggests
the
absence
of
a
self-selection
bias
in
the
students
who
opted
to
take
the
retention
test
the
students
in
the
retention
test
were
given
isomorphs
of
the
posttest
tasks
described
earlier
and
the
analysis
criteria
were
identical
to
those
used
in
the
cmu
experiments
3
2
2
results
and
discussion
as
discussed
earlier
a
statistical
comparison
between
um-1
and
cmu-2
could
not
be
done
because
the
um-1
students
had
one
extra
day
of
instruction
per
application
we
therefore
present
the
data
in
figure
2
mainly
to
provide
a
direct
comparison
with
the
cmu-2
data
as
shown7
the
strategy
group
had
a
high
rate
of
strategy
use
comparable
to
the
strategy
group
in
cmu-2
also
art
students
in
four
strategy
opportunities
i
j
k
and
l
there
was
a
small
drop
5
10
7
and
11
in
strategy
use
the
rest
had
either
equal
or
much
more
strategy
use
the
extra
instruction
might
explain
the
higher
scores
that
um-1
students
acquired
in
the
posttest
for
strategy
opportunities
but
the
results
certainly
suggest
that
the
instructional
framework
was
robust
in
a
new
context
just
as
in
the
cmu
experiments
we
performed
a
two-step
analysis
procedure
in
the
first
step
we
tested
for
an
overall
effect
by
analyzing
the
proportion
of
strategy
opportunities
used
by
each
student
in
the
command
appspecific
and
in
the
strategy
groups
this
test
showed
that
the
mean
proportions
for
both
groups
was
very
high
and
that
no
significant
difference
existed
between
the
two
groups
command
ap-specific
group
mean
proportion
72
89
sd
18
strategy
group
mean
proportion
72
44
sd
24
t
48
0034
p
997
this
result
was
expected
because
with
the
exception
of
view
parts
of
spread
out
information
simultaneously
on
the
screen
in
msexcel
both
groups
were
taught
application-specific
strategies
in
the
applications
in
which
they
were
assessed
as
discussed
earlier
neither
the
command
app-specific
group
nor
the
strategy
group
in
um-1
was
taught
the
general
form
of
the
strategy
view
parts
of
spread
out
information
simultaneously
on
the
screen
in
msexcel
however
the
strategy
group
was
taught
the
general
form
of
the
strategy
in
msword
while
the
command
ap-specific
group
was
taught
only
the
application-specific
form
of
the
above
strategy
in
msword
to
test
if
this
had
an
effect
on
transfer
we
performed
the
second
step
of
our
analysis
a
chi-square
test
on
each
individual
strategy
opportunity
as
shown
in
table
iv
there
were
no
significant
differences
between
the
groups
on
directly-instructed
strategies
see
table
vi
in
appendix
e
for
details
of
each
statistical
comparison
however
based
on
a
chi-square
test
on
the
frequencies
in
each
group
there
was
a
significant
difference
df
1
n
50
3
99
p
05
between
the
command
ap
specific
group
and
the
strategy
group
for
the
untaught
transfer
strategy
g
view
parts
of
spread
out
information
simultaneously
on
the
screen
in
msexcel
this
result
suggests
that
transfer
is
improved
when
a
strategy
is
taught
in
its
general
form
this
result
is
however
not
definitive
because
we
tested
for
transfer
in
only
one
instance
however
despite
the
fact
that
the
split
window
command
necessary
to
execute
the
strategy
in
word
and
excel
is
identical
in
both
applications
the
results
indicate
that
application-general
strategic
knowledge
may
be
important
to
enable
transfer
transfer
has
been
difficult
to
achieve
in
many
studies
see
singley
and
anderson
1989
for
an
extensive
discussion
it
is
possible
that
transfer
did
occur
in
our
exploratory
study
because
we
1
explicitly
taught
the
conditions
of
when
to
use
the
strategy
in
the
context
of
tasks
in
a
specific
application
2
made
users
aware
of
the
nature
of
tasks
that
warrants
the
strategy
and
3
taught
the
strategy
multiple
times
with
different
examples
because
this
was
true
for
all
the
strategies
that
we
taught
we
believe
our
instructional
framework
appears
to
be
well-suited
for
the
transfer
of
strategies
and
is
in
agreement
with
earlier
research
on
transfer
of
skills
bossock
and
holyoak
1989
fong
et
al
1986
gick
and
holyoak
1983
however
future
research
should
test
this
result
with
more
extensive
transfer
conditions
finally
the
results
of
the
retention
test
showed
high
retention
of
strategic
knowledge
across
all
the
strategy
opportunities
none
of
the
differences
between
the
posttest
and
retention
test
were
significant
in
msexcel
or
msword
for
either
group
thus
retention
of
strategic
knowledge
after
one
month
was
high
in
both
groups
3
2
3
dissemination
of
the
strategy-based
instructional
approach
the
success
of
our
strategy-based
instructional
approach
in
two
universities
led
to
requests
for
the
use
of
the
course
material
by
the
school
of
nursing
at
the
university
of
michigan
the
nursing
faculty
requested
that
the
course
be
used
to
teach
their
freshman
students
the
strategic
use
of
computer
applications
they
also
requested
that
we
teach
powerpoint
in
addition
to
msword
msexcel
and
dreamweaver
the
course
was
taught
in
two
iterations
at
the
nursing
school
with
minimal
involvement
of
the
original
authors
this
was
achieved
by
providing
written
instructions
to
graduate
students
who
were
hired
to
teach
the
course
these
instructions
included
the
teaching
guides
discussed
in
section
2
4
1
and
a
set
of
guidelines8
of
how
to
design
and
execute
the
teaching
guides
the
graduate
student
instructors
modified
and
executed
the
course
with
minimal
involvement
of
the
original
authors
additionally
we
received
requests
from
two
other
universities9
that
wished
to
explore
how
to
provide
strategy-based
instruction
to
freshman
students
3
3
summary
of
extending
strategy-based
instruction
to
new
applications
and
populations
in
phase
2
of
our
research
on
strategy-based
instruction
we
tested
whether
the
strategy
and
instructional
frameworks
could
be
extended
to
a
context
requiring
a
new
computer
application
and
using
a
new
population
of
arts
students
furthermore
we
tested
whether
strategic
knowledge
could
be
retained
over
time
the
results
showed
that
the
strategy
framework
and
the
instructional
framework
could
be
successfully
extended
to
new
applications
and
to
new
populations
and
that
strategic
knowledge
was
retained
even
after
one
month
furthermore
an
exploratory
study
suggested
that
transfer
of
strategic
skill
to
a
new
application
improves
significantly
when
the
strategy
is
taught
in
its
general
form
finally
the
course
material
was
disseminated
to
another
context
within
the
university
of
michigan
and
to
the
university
of
western
australia
4
lessons
learned
in
teaching
the
strategic
use
of
complex
computer
applications
over
the
five-year
span
of
our
research
program
we
have
learned
lessons
related
to
1
the
need
to
teach
strategies
explicitly
2
the
organization
of
strategies
3
approaches
to
teach
commands
and
strategies
4
guidelines
for
creating
and
teaching
strategy-based
instruction
and
5
the
effects
of
strategy-based
instruction
on
learning
4
1
strategies
need
to
be
taught
explicitly
several
studies
have
shown
that
many
users
do
not
acquire
effective
and
efficient
strategies
to
use
computer
applications
in
fact
as
discussed
in
section
1
there
are
many
reasons
that
conspire
against
users
discovering
and
using
helpful
strategies
despite
many
years
of
experience
and
despite
well-designed
interfaces
while
we
have
experimented
with
online
intelligent
help
systems
bhavnani
et
al
1996
and
are
open
to
other
approaches
to
deliver
instruction
we
have
come
to
believe
that
whatever
the
medium
and
style
of
instruction
most
users
need
to
be
taught
strategic
knowledge
explicitly
before
they
acquire
a
wide
range
of
effective
and
efficient
strategies
4
2
strategies
exploit
general
powers
of
computers
to
teach
strategies
explicitly
we
first
need
to
know
what
they
are
while
several
studies
had
identified
the
need
to
teach
effective
and
efficient
strategies
none
of
the
studies
had
identified
a
systematic
approach
to
organize
them
because
we
wished
to
identify
strategies
that
generalized
across
authoring
applications
we
focused
on
the
general
functions
or
powers
that
these
applications
provided
this
led
us
to
organize
strategies
based
on
four
powers
of
computer
applications
iteration
propagation
organization
and
visualization
in
addition
to
helping
us
to
organize
the
general
strategies
and
instantiate
them
systematically
across
applications
the
framework
can
be
extended
to
include
new
strategies
as
new
powers
of
computer
applications
are
discovered
and
provided
to
users
4
3
strategies
should
be
taught
in
combination
with
commands
a
critical
component
of
strategy-based
instruction
is
that
commands
should
be
tightly
integrated
with
the
teaching
of
strategies
through
our
early
prototypes
we
learned
that
an
effective
way
to
teach
strategies
was
to
first
teach
how
to
use
a
small
set
of
commands
then
immediately
teach
when
to
use
those
commands
followed
by
teaching
the
general
form
of
the
strategy
other
approaches
such
as
providing
a
general
framework
of
all
the
strategies
before
teaching
commands
did
not
motivate
students
in
the
classroom
we
believe
this
is
because
learning
strategies
in
the
absence
of
knowing
how
to
implement
them
with
commands
is
too
abstract
4
4
general
strategies
can
enable
users
to
acquire
strategic
knowledge
while
there
has
been
research
in
teaching
strategies
to
perform
tasks
in
a
wide
range
of
domains
such
as
math
and
reading
we
found
no
systematic
studies
that
explored
how
to
teach
general
strategies
to
use
computer
applications
our
research
has
shown
that
for
the
most
part
merely
learning
commands
does
not
easily
lead
users
to
acquire
many
strategies
our
experiments
have
shown
that
to
learn
how
to
use
efficient
and
effective
strategies
to
use
computer
applications
in
a
short
amount
of
time
users
should
be
explicitly
taught
1
the
commands
needed
for
a
strategy
2
the
conditions
under
which
a
strategy
is
useful
and
3
the
strategy
itself
in
its
application-specific
form
if
users
are
expected
to
transfer
strategies
across
applications
there
is
some
indication
that
the
general
form
can
significantly
improve
transfer
even
when
the
commands
to
use
the
strategies
are
virtually
identical
5
reflections
this
article
has
focused
on
our
five
years
of
research
related
to
strategy-based
instruction
however
our
research
path
began
much
earlier
when
we
first
conducted
an
ethnographic
study
to
observe
how
architects
were
using
cad
systems
to
perform
real-world
tasks
bhavnani
et
al
1996
this
study
revealed
that
the
architects
were
not
using
effective
and
efficient
strategies
despite
knowing
how
to
use
the
commands
on
the
interface
and
despite
many
years
of
experience
in
using
the
cad
system
cognitive
analysis
of
these
real-world
tasks
suggested
the
existence
of
strategies
that
could
improve
the
performance
of
the
users
because
the
observed
users
had
few
problems
with
the
interface
we
decided
to
focus
on
strategy-based
instruction
to
address
the
ineffective
and
inefficient
use
of
computer
applications
our
decision
to
pursue
strategy-based
instruction
has
often
been
criticized
for
attempting
to
change
users
to
fit
poorly
designed
systems
this
argument
takes
the
position
that
the
need
for
instruction
represents
a
failure
in
the
design
of
the
interface
and
therefore
that
instead
of
attempting
to
change
the
user
through
instruction
we
should
attempt
to
change
the
interface
so
that
it
enables
users
to
spontaneously
discover
and
use
effective
strategies
we
believe
this
argument
ignores
important
characteristics
of
the
problem
consider
the
split
window
command
available
in
msword
and
msexcel
this
command
is
explicitly
designed
to
perform
the
simple
goal
of
dividing
a
window
into
two
panes
and
is
useful
in
a
wide
range
of
higher-level
editing
tasks
however
while
a
user
might
learn
from
the
interface
that
the
split
window
command
can
divide
the
window
into
two
panes
it
is
much
more
difficult
to
learn
from
the
same
interface
when
best
to
use
that
command
to
know
when
to
divide
the
window
into
two
panes
a
user
must
recognize
specific
characteristics
in
the
higher-level
task
for
example
a
user
must
learn
to
recognize
that
when
two
information
objects
that
need
to
be
compared
are
far
apart
in
a
document
then
they
need
to
be
brought
together
on
the
screen
before
performing
the
comparison10
acquiring
knowledge
to
recognize
such
task-related
cues
is
difficult
and
as
demonstrated
by
our
experiments
such
recognition
often
does
not
happen
spontaneously
just
from
knowing
how
to
use
commands
as
described
in
section
2
knowledge
to
detect
characteristics
of
a
higher-level
task
and
connect
them
to
specific
commands
has
been
a
critical
part
of
the
strategic
knowledge
that
we
have
abstracted
and
taught
one
can
argue
that
interfaces
could
automatically
detect
characteristics
of
a
task
from
user
actions
and
then
suggest
to
the
user
when
to
use
more
efficient
and
effective
methods
this
approach
can
be
successful
when
the
detection
is
unambiguous
like
inferring
that
a
user
is
manually
creating
a
numbered
list
and
automatically
converting
the
text
into
a
numbered
list
however
in
most
cases
automatic
detection
of
task
characteristics
is
not
unambiguous
for
instance
even
intelligent
interfaces
would
have
difficulty
in
unambiguously
inferring
that
a
user
was
attempting
to
compare
two
distant
pieces
of
information
and
correctly
suggest
the
use
of
the
split
window
command
such
ambiguity
can
lead
to
complex
carroll
and
aaronson
1988
and
often
annoying
dialogs
with
the
user
to
resolve
the
ambiguity
we
have
explored
approaches
to
automatically
detect
opportunities
for
using
more
effective
strategies
bhavnani
et
al
1996
and
believe
such
research
should
continue
and
be
informed
by
the
results
reported
here
for
example
such
projects
should
target
those
strategies
like
the
ones
identified
in
our
experiments
which
are
difficult
to
acquire
just
by
knowing
commands
however
we
believe
that
such
attempts
should
where
possible
be
complemented
with
strategy-based
instruction
that
can
assist
users
in
acquiring
a
comprehensive
understanding
of
the
power
of
computers
and
how
best
to
exploit
them
such
knowledge
as
we
have
explored
could
have
the
added
advantage
of
being
transferable
across
applications
looking
back
our
research
has
attempted
to
reduce
the
cost
of
learning
by
using
strategies
this
was
achieved
by
teaching
users
how
to
use
commands
how
to
recognize
opportunities
to
use
them
strategically
within
an
application
and
then
how
such
opportunities
generalize
across
applications
while
our
overall
approach
has
been
fairly
successful
it
may
be
insufficiently
motivating
for
students
who
already
have
a
substantial
knowledge
of
commands
accordingly
we
believe
that
it
might
be
useful
to
develop
a
course
that
focuses
only
on
strategic
knowledge
without
also
teaching
commands
we
are
also
exploring
the
development
of
a
minimalist
strategy
manual
that
would
provide
brief
online
instruction
of
strategies
for
use
with
different
computer
applications
furthermore
while
we
have
focused
on
delivering
strategy
instruction
in
a
classroom
context
we
would
also
like
to
explore
how
the
same
material
could
be
delivered
through
computer-based
tutors
future
research
also
needs
to
explore
how
well
the
strategies
transfer
across
applications
and
are
retained
over
longer
periods
of
time
furthermore
as
discussed
by
others
payne
et
al
2001
we
need
to
better
understand
the
attributes
of
and
conditions
under
which
some
strategies
are
automatically
acquired
just
by
learning
commands
more
research
is
needed
to
investigate
how
best
to
teach
instructors
how
to
design
and
execute
strategy-based
instruction
effectively
finally
the
ineffective
use
of
computer
applications
is
not
unique
to
authoring
applications
many
users
have
difficulty
in
acquiring
strategies
to
perform
effective
searches
on
the
web
bhavnani
2001
and
we
believe
that
our
instructional
framework
could
be
adapted
to
teach
strategic
knowledge
to
improve
information-seeking
behavior
bhavnani
2005
bhavnani
et
al
2006
our
hope
is
that
such
research
will
help
achieve
our
ultimate
goal
of
making
users
more
effective
and
efficient
in
the
use
of
a
wide
range
of
computer
applications
